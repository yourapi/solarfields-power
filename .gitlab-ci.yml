image: docker:stable
services:
- docker:dind


stages:
- build
- deploy

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  RELEASE_IMAGE: registry.gitlab.com/okapifordevelopers/solarfields-power/website:$CI_COMMIT_REF_NAME-build$CI_PIPELINE_ID
  NAMESPACE: prod-solarfields-power


before_script:
- echo "Logging in to docker registry"
- docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com


build:
  stage: build
  script:
  - docker build --file ./deployment/Dockerfile --pull -t $RELEASE_IMAGE .
  - docker push $RELEASE_IMAGE


deploy-production:
  stage: deploy
  when: manual
  script:
  - echo "Deploy to production server"
  - apk add --no-cache curl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
  - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
  - kubectl config set-context default --cluster=nosebit --user=admin --namespace=$NAMESPACE
  - kubectl config use-context default
  - kubectl create ns $NAMESPACE || true
  - 'printf "apiVersion: v1\nkind: Secret\n$(kubectl create secret docker-registry gitlab-registry --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD --docker-email=$GITLAB_USER_EMAIL -o yaml --dry-run)" | kubectl apply -f -'
  - sed 's~_IMAGE_~'"$RELEASE_IMAGE"'~g; s~_HOSTNAME_~'"solarfields-power.okapifordevelopers.com"'~g' deployment/kubernetes.template.yaml > kubernetes.yaml;
  - kubectl apply -f kubernetes.yaml
  environment:
    name: Production
    url: https://solarfields-power.okapifordevelopers.com
  only:
  - tags
  - master

